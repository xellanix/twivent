importScripts("/opencv.js");class u{constructor(t){this.errorOutputId=t}createFileFromUrl(t,a,r){let e=new XMLHttpRequest;e.open("GET",a,!0),e.responseType="arraybuffer",e.onload=()=>{if(e.status===200){let i=new Uint8Array(e.response);cv.FS_createDataFile("/",t,i,!0,!1,!1),r()}else this.printError(`Failed to load ${a} status: ${e.status}`)},e.send()}printError(t){console.error(t)}}self.onmessage=async n=>{const{imageData:t}=n.data;if(!cv||!cv.imread||!cv.CascadeClassifier)return;let a=cv.matFromImageData(t),r=new cv.Mat;cv.cvtColor(a,r,cv.COLOR_RGBA2GRAY,0);let e=new cv.CascadeClassifier,i=new u("errorMessage"),o="haarcascade_frontalface_default.xml";await new Promise(s=>{i.createFileFromUrl(o,`/${o}`,()=>{e.load(o),s(!0)})});let l=new cv.RectVector,d=new cv.Size(0,0);e.detectMultiScale(r,l,1.1,3,0,d,d);let f=[];for(let s=0;s<l.size();++s){let c=l.get(s);f.push({x:c.x,y:c.y,width:c.width,height:c.height})}a.delete(),r.delete(),e.delete(),l.delete(),self.postMessage({faces:f})};
